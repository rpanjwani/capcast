{"name":"Capcast","tagline":"a video conferencing app","body":"# capCast\r\nA video conferencing app that produces speech to text captions in real time. This project will comprise of combined project work for Csc 462/562, Csc 466/566, and Csc 461/561.\r\n\r\n## Usage\r\nCapCast will allow video conferencing using a web-browser while producing captions in real time. This can aid in better communication between users with or without special needs. \r\n \r\n## Contributors\r\n- Riz Panjwani\r\n- Harsh Dawar\r\n- Sumit Kadyan\r\n- Khushbu Gandhi\r\n \r\n## Key Features\r\nCapCast will allow a user to do the following:\r\n- generate a link for the video conference that users can share to join the conference.\r\n- call one or more users.\r\n- turn captioning on/off.\r\n- turn translations on/off.\r\n\r\n## Major Components\r\n\r\nWe have broken down the project into the following components that correspond to the appropriate course work below.\r\n\r\n### Peer to Peer Clients (csc 466 / 566 - P2P Overlay Component)\r\nA client is simply a browser running on a user's computer. If the call is one-to-one (only two clients connected to each other), then capCast will use a P2P connection using WebRTC in order to stream the video conference. Otherwise, it will switch to using a capCast host server to carry out the communication.\r\n\r\n### CapCast Host Servers (csc 462 / 562 - Distributed Systems Component)\r\nCapCast host servers will be a distributed system that host the application. The system will facilitate a call between users. If there are two clients, the system will offload the streaming to the p2p model, where the clients will handle the streaming amongst themselves. When a call involves more than two clients, the server will facilitate the video streaming. We will simulate delays, network loss, and node fault to demonstrate the system's ability to cope with failure.\r\n\r\n### Video Streaming and Captioning (csc 461 / 561 - Multimedia Systems Component)\r\nVideo conferencing will be done using HTML5 and WebRTC. Real-time speech to text captioning will be done using the Google Web Speech API.\r\n\r\n\r\n## Challenges\r\n\r\n## Milestones\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}